{"name":"Moip","tagline":"This is a package of a payment intermediary called MOIP","body":"# MoIP (Laravel Package)\r\n----------------------\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/sostheblack/moip/v/stable.svg)](https://packagist.org/packages/sostheblack/moip) [![Total Downloads](https://poser.pugx.org/sostheblack/moip/downloads.svg)](https://packagist.org/packages/sostheblack/moip) [![Latest Unstable Version](https://poser.pugx.org/sostheblack/moip/v/unstable.svg)](https://packagist.org/packages/sostheblack/moip) [![License](https://poser.pugx.org/sostheblack/moip/license.svg)](https://packagist.org/packages/sostheblack/moip)\r\n\r\nIntegrates via API, your e-commerce with MoIP quickly and easily\r\n\r\n- `Moip::sendMoip($data);`\r\n- `Moip::response`;\r\n\r\nand response\r\n\r\n- `$moip->error`\r\n- `$moip->response`\r\n- `$moip->token`\r\n- `$moip->payment_url`\r\n- `$moip->xmlSend`\r\n- `$moip->xmlGet`\r\n- `Moip::response()`\r\n\r\n![](http://www.tickimg.com.br/uploads/_captura_de_tela_de.png)\r\n\r\n## Instalation\r\n\r\n### Laravel 4.2 and Blow\r\n\r\nBegin by installing this package through Composer. Edit your project's `composer.json` file to require `sostheblack/moip`.\r\n\r\nsoon in version v1.*\r\n```\r\n\"require-dev\": {\r\n    \"sostheblack/moip\": \"1.*\"\r\n}\r\n```\r\n\r\nNext, update Composer from the Terminal:\r\n\r\n`$ composer update`\r\n\r\nOnce that's been completed, the next step operation is to copy the file that is in moip.php `vendor/sostheblack/src/config/moip.php` and Paste in `app/config`\r\n\r\nMake the necessary settings and proceed to the next step\r\n\r\nOnce this operation completes, the final step is to add the service provider and facade. Open `app/config/app.php`.\r\n\r\nAdd a new item to the providers array.\r\n\r\n```\r\n'providers' => array(\r\n    'Illuminate\\Foundation\\Providers\\ArtisanServiceProvider',\r\n    'Illuminate\\Auth\\AuthServiceProvider',\r\n    ...\r\n    'SOSTheBlack\\Moip\\ServiceProvider',\r\n),\r\n```\r\n\r\nAdd a new item to the facades array.\r\n\r\n```\r\n'aliases' => array(\r\n    'App'        => 'Illuminate\\Support\\Facades\\App',\r\n    'Artisan'    => 'Illuminate\\Support\\Facades\\Artisan',\r\n    ...\r\n    'Moip'       => 'SOSTheBlack\\Moip\\Facade',\r\n),\r\n```\r\n\r\n### Laravel 5 and Abouve\r\n\r\ncoming soon\r\n\r\n## Usage\r\n\r\n### simple\r\n\r\nSent only the total sale, is configured to send data in `app/config/moip.php`\r\n```\r\n$data = ['values' => ['value' => $full_price_products] ];\r\ntry {\r\n    $moip = Moip::sendMoip($data);\r\n} catch (Exception $e) {\r\n    echo $e->getMessage();\r\n}\r\n```\r\n\r\n### Advanced\r\n\r\nFully customize the data sent!\r\n```\r\n$data = [\r\n    'unique_id' => 100000001,\r\n    'reason'    => 'market of Natal 01',\r\n    'receiver'  => 'integracao@moip.com.br',\r\n    'parcel'    => [\r\n        'min'       => 2, \r\n        'max'       => 12, \r\n        'rate'      => 1.5, \r\n        'transfer'  => true\r\n    ],\r\n    'values'    => [\r\n        'value' => $full_price_products , \r\n        'adds'  => $freight, \r\n        'deduct'=> $coupon\r\n    ],\r\n    'comission' => [\r\n        'value'           => 7, \r\n        'reason'          => 'Taxa MoIP', \r\n        'ratePayer'       => true,\r\n        'percentageValue' => true,\r\n        'receiver'        => 'suporte@moip.com.br',\r\n    ]\r\n];\r\ntry {\r\n    $moip = Moip::sendMoip($data);\r\n} catch (Exception $e) {\r\n    echo $e->getMessage();\r\n}\r\n```\r\n\r\n## Sending parameters\r\n\r\n#### values\r\n##### $full_price_products: Number, $freight: Number, $coupon: Number\r\n\r\n1. $full_price_products: Responsible for setting the value that should be paid.\r\n2. $freigth: Responsible for defining the additional amount to be paid.\r\n3. $deduct: Responsible for defining the value of discount will be subtracted from the total to be paid.\r\n```\r\n$data['values'] => [\r\n    'value'     => $full_price_products,\r\n    'adds'      => $freigth,\r\n    'dedudct'   => $deduct\r\n];\r\n```\r\n\r\n#### unique_id\r\n##### $id: String\r\n\r\nIts unique identifier request this same information will be sent to you on our notification of changes in status so that you can identify and treat your application status.\r\n\r\n`$data['unique_id'] = $id;`\r\n\r\n#### reason\r\n##### $value: String\r\n\r\nResponsible for defining the reason for the payment\r\n\r\n`$data['reason'] => $value;`\r\n\r\n#### receiver\r\n##### $receiver String\r\n\r\nIdentifies the user who will receive payment in MoIP\r\n\r\n`$data['receiver'] = $receiver;`\r\n\r\n#### parcel\r\n##### $min: Number, $max: Number, $rate : Number, $transfer : Boolean\r\n\r\nResponsible for the installment which will be available to the paying options.\r\n\r\n1. $min : Minimum number of plots available to the paying.\r\n2. $max : Maximum amount of shares available to the paying.\r\n3. $rate : Amount of interest a.m per parcel.\r\n4. $transfer : If `true` sets the default value of the interest will be paid by the paying MOIP.\r\n```\r\n$data['parcel'] => [\r\n    'min'       => 2, \r\n    'max'       => 12, \r\n    'rate'      => 1.5, \r\n    'transfer'  => false\r\n];\r\n```\r\n\r\n#### comission\r\n##### $reason: String, $receiver: String, $value: Number, $percentageValue: Boolean, $ratePayer: Boolean\r\n\r\n1. $ reason: Reason / Motif to which the secondary recipient will receive the set value.\r\n2. $ receiver: Login MOIP the User to receive the value.\r\n3. $ value: Value which will be allocated to the secondary receiver.\r\n4. $ percentageValue: If \"true\" sets that value will be calculated in relation to the percentage of\r\nthe total value of the transaction.\r\n5. $ ratepayer: If \"true\" sets that secondary recipient will pay the MOIP with\r\nvalue received.\r\n\r\n```\r\n$data['comission'] => [ \r\n    'value' => 7, \r\n    'reason' => 'Taxa MoIP', \r\n    'ratePayer' => true, \r\n    'percentageValue' => true, \r\n    'receiver' => 'suporte@moip.com.br'\r\n];\r\n```\r\n\r\n### Data Response\r\n\r\nMethod | Response\r\n-------|----------\r\n$moip->error | false or error message\r\n$moip->response | true or false\r\n$moip->token | token request\r\n$moip->payment_url | payment url\r\n$moip->xmlSend | xml sent\r\n$moip->xmlGet | xml reponse\r\nMoip::response() | object equal to all previous methods\r\n\r\n### License\r\n\r\nThe MoIP pakacge is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT)\r\n","google":"UA-56323206-1","note":"Don't delete this file! It's used internally to help with page regeneration."}