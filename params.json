{"name":"Moip","tagline":"This is a package of a payment intermediary called MOIP","body":"# MoIP (Laravel Package)\r\n----------------------\r\n\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/SOSTheBlack/moip/badges/quality-score.png?b=develop)](https://scrutinizer-ci.com/g/SOSTheBlack/moip/?branch=develop) \r\n[![Build Status](https://travis-ci.org/SOSTheBlack/moip.svg?branch=master)](https://travis-ci.org/SOSTheBlack/moip) \r\n[![Latest Stable Version](https://poser.pugx.org/sostheblack/moip/v/stable.svg)](https://packagist.org/packages/sostheblack/moip) \r\n[![Total Downloads](https://poser.pugx.org/sostheblack/moip/downloads.svg)](https://packagist.org/packages/sostheblack/moip) \r\n[![Latest Unstable Version](https://poser.pugx.org/sostheblack/moip/v/unstable.svg)](https://packagist.org/packages/sostheblack/moip) \r\n[![License](https://poser.pugx.org/sostheblack/moip/license.svg)](https://packagist.org/packages/sostheblack/moip)\r\n\r\nPackage for integrating its platform with the intermediary payment MoIP.\r\n\r\n- `Moip::sendMoip($data);`\r\n- `Moip::response()`;\r\n\r\nand response\r\n\r\n- `$moip->error`\r\n- `$moip->response`\r\n- `$moip->token`\r\n- `$moip->payment_url`\r\n- `$moip->xmlSend`\r\n- `$moip->xmlGet`\r\n- `Moip::response()`\r\n\r\n![Moip](http://www.tickimg.com.br/uploads/_captura_de_tela_de.png)\r\n\r\n## Instalation\r\n\r\n### Laravel 4.2 and Blow\r\n\r\nBegin by installing this package through Composer. Edit your project's `composer.json` file to require `sostheblack/moip`.\r\n\r\nsoon in version v1.*\r\n\r\n```\r\n\"require-dev\": {\r\n    \"sostheblack/moip\": \"1.*\"\r\n}\r\n```\r\n\r\nNext, update Composer from the Terminal:\r\n\r\n```\r\n$ composer update\r\n```\r\n\r\nOnce that's been completed, the next step operation is run this command in terminal\r\n\r\n```\r\n$ php artisan config:publish sostheblack/moip\r\n```\r\n\r\nA configuration file will be created in `app/config/packages/sostheblack/moip/moip.php`\r\n\r\nMake the necessary settings and proceed to the next step\r\n\r\nOnce this operation completes, the final step is to add the service provider and facade. Open `app/config/app.php`.\r\n\r\nAdd a new item to the providers array.\r\n\r\n```\r\n'providers' => array(\r\n    'Illuminate\\Foundation\\Providers\\ArtisanServiceProvider',\r\n    'Illuminate\\Auth\\AuthServiceProvider',\r\n    ...\r\n    'SOSTheBlack\\Moip\\MoipServiceProvider',\r\n),\r\n```\r\n\r\nAdd a new item to the facades array.\r\n\r\n```\r\n'aliases' => array(\r\n    'App'        => 'Illuminate\\Support\\Facades\\App',\r\n    'Artisan'    => 'Illuminate\\Support\\Facades\\Artisan',\r\n    ...\r\n    'Moip'       => 'SOSTheBlack\\Moip\\Facade',\r\n),\r\n```\r\n\r\n### Laravel 5 and Abouve\r\n\r\ncoming soon\r\n\r\n## Usage\r\n\r\n### simple\r\n\r\nSent only the total sale, is configured to send data in `app/config/moip.php`\r\n```\r\n$data = ['values' => ['value' => $full_price_products] ];\r\ntry {\r\n    $moip = Moip::sendMoip($data);\r\n} catch (Exception $e) {\r\n    echo $e->getMessage();\r\n}\r\n```\r\n\r\n### Advanced\r\n\r\nFully customize the data sent!\r\n```\r\n$data = [\r\n    'unique_id' => 100000001,\r\n    'reason'    => 'market of Natal 01',\r\n    'receiver'  => 'integracao@moip.com.br',\r\n    'returnURL' => 'https://meusite.com.br/cliente/$id/pedido/pedidorealizado',\r\n    'notificationURL' => 'https://meusite.com.br/nasp',\r\n    'payer'     => [\r\n        'name'      => 'user name',\r\n        'email'     => 'integracao@moip.com.br',\r\n        'payerId'   => 'id_user',\r\n        'identity'  => '111.111.111-11',\r\n        'phone'     => '(11) 1111-1111)',\r\n        'billingAddress' => [\r\n            'address'   => 'Street Love',\r\n            'number'    => 45,\r\n            'complement'=> 'plaza',\r\n            'city'      => 'São Paulo',\r\n            'neighborhood' => 'Love',\r\n            'state'     => 'SP',\r\n            'country'   => 'BRA',\r\n            'zipCode'   => '01230-000',\r\n            'phone'     => '(11) 1 1111-1111)'\r\n        ]\r\n    ],    \r\n    'parcel'    => [\r\n        'min'       => 2, \r\n        'max'       => 12, \r\n        'rate'      => 1.5, \r\n        'transfer'  => true\r\n    ],\r\n    'values'    => [\r\n        'value' => $full_price_products , \r\n        'adds'  => $freight, \r\n        'deduct'=> $coupon\r\n    ],\r\n    'comission' => [\r\n        'value'           => 7, \r\n        'reason'          => 'Taxa MoIP', \r\n        'ratePayer'       => true,\r\n        'percentageValue' => true,\r\n        'receiver'        => 'suporte@moip.com.br',\r\n    ],\r\n    'billet' => [\r\n        'expiration' => 3,\r\n        'workingDays'=> true,\r\n        'instructions' => [\r\n            'firstLine' => 'First line of comment of billet',\r\n            'secondLine'=> 'Second line of comment of billet',\r\n            'lastLine'  => 'Last line of comment of billet'\r\n        ],\r\n        'urlLogo' => 'http://seutie.com.br/logo.png'\r\n    ],\r\n    'message' => [\r\n        'firstLine' => 'First comment of checkout',\r\n        'secondLine'=> 'Second comment of checkout',\r\n        'lastLine'  => 'Last comment of checkout'\r\n    ],\r\n    'payment' => [\r\n        'creditCard'=> true,\r\n        'billet'    => false,\r\n        'financing' => false,\r\n        'debit'     => false,\r\n        'debitCard' => false\r\n    ]\r\n];\r\ntry {\r\n    $moip = Moip::sendMoip($data);\r\n} catch (Exception $e) {\r\n    echo $e->getMessage();\r\n}\r\n```\r\n\r\n## Sending parameters\r\n\r\n#### payer\r\n----------------------\r\nSend to MoIP data payer\r\n\r\n```\r\n$data['payer'] = [\r\n    'payer'     => [\r\n        'name'      => 'user name',\r\n        'email'     => 'integracao@moip.com.br',\r\n        'payerId'   => 'id_user',\r\n        'identity'  => '111.111.111-11',\r\n        'phone'     => '(11) 1111-1111)',\r\n        'billingAddress' => [\r\n            'address'   => 'Street Love',\r\n            'number'    => 45,\r\n            'complement'=> 'plaza',\r\n            'city'      => 'São Paulo',\r\n            'neighborhood' => 'Love',\r\n            'state'     => 'SP',\r\n            'country'   => 'BRA',\r\n            'zipCode'   => '01230-000',\r\n            'phone'     => '(11) 1 1111-1111)'\r\n        ]\r\n    ],    \r\n];\r\n```\r\n\r\n#### values\r\n----------------------\r\n##### $full_price_products: Number, $freight: Number, $coupon: Number\r\n\r\n1. $full_price_products: Responsible for setting the value that should be paid.\r\n2. $freigth: Responsible for defining the additional amount to be paid.\r\n3. $deduct: Responsible for defining the value of discount will be subtracted from the total to be paid.\r\n```\r\n$data['values'] = [\r\n    'value'     => $full_price_products,\r\n    'adds'      => $freigth,\r\n    'dedudct'   => $deduct\r\n];\r\n```\r\n\r\n#### unique_id\r\n----------------------\r\n##### $id: String\r\n\r\nIts unique identifier request this same information will be sent to you on our notification of changes in status so that you can identify and treat your application status.\r\n\r\n```\r\n$data['unique_id'] = $id;\r\n```\r\n\r\n#### reason\r\n----------------------\r\n##### $value: String\r\n\r\nResponsible for defining the reason for the payment\r\n\r\n```\r\n$data['reason'] = $value;\r\n```\r\n\r\n#### receiver\r\n----------------------\r\n##### $receiver String\r\n\r\nIdentifies the user who will receive payment in MoIP\r\n\r\n```\r\n$data['receiver'] = $receiver;\r\n```\r\n\r\n#### parcel\r\n----------------------\r\n##### $min: Number, $max: Number, $rate : Number, $transfer : Boolean\r\n\r\nResponsible for the installment which will be available to the paying options.\r\n\r\n1. $min : Minimum number of plots available to the paying.\r\n2. $max : Maximum amount of shares available to the paying.\r\n3. $rate : Amount of interest a.m per parcel.\r\n4. $transfer : If `true` sets the default value of the interest will be paid by the paying MOIP.\r\n```\r\n$data['parcel'] = [\r\n    'min'       => 2, \r\n    'max'       => 12, \r\n    'rate'      => 1.5, \r\n    'transfer'  => false\r\n];\r\n```\r\n\r\n#### comission\r\n----------------------\r\n##### $reason: String, $receiver: String, $value: Number, $percentageValue: Boolean, $ratePayer: Boolean\r\n\r\n1. $reason: Reason / Motif to which the secondary recipient will receive the set value.\r\n2. $receiver: Login MOIP the User to receive the value.\r\n3. $value: Value which will be allocated to the secondary receiver.\r\n4. $percentageValue: If \"true\" sets that value will be calculated in relation to the percentage of\r\nthe total value of the transaction.\r\n5. $ratepayer: If \"true\" sets that secondary recipient will pay the MOIP with\r\nvalue received.\r\n\r\n```\r\n$data['comission'] = [ \r\n    'value' => 7, \r\n    'reason' => 'Taxa MoIP', \r\n    'ratePayer' => true, \r\n    'percentageValue' => true, \r\n    'receiver' => 'suporte@moip.com.br'\r\n];\r\n```\r\n\r\n#### billet\r\n----------------------\r\n##### $expiration: Int ou Date, $workingDays: Boolean, $instructions: Array(), $uriLogo: String\r\n\r\n1. $expiration: Date in \"YYYY-MM-DD\" format or number of days.\r\n2. $workingDays: If \"expiration\" is the amount of days you can set to. \"true\" to that is counted in business days, the default is calendar days.\r\n3. $instructions: Additional Message to be printed on the ticket, up to three messages.\r\n4. $urlLogo: URL of your logo maximum dimensions 75px wide by 40px high.\r\n\r\n```\r\n$data['billet'] = [\r\n    'billet' => [\r\n        'expiration' => 3,\r\n        'workingDays'=> true,\r\n        'instructions' => [\r\n            'firstLine' => 'First line of comment of billet'',\r\n            'secondLine'=> 'Second line of comment of billet'',\r\n            'lastLine'  => 'Last line of comment of billet'\r\n        ],\r\n        'urlLogo' => 'http://seutie.com.br/logo.png'\r\n    ]\r\n];\r\n```\r\n\r\n#### message\r\n----------------------\r\n##### $msg: String\r\n\r\n1. $msg: Display additional messages at checkout MOIP to your buyer.\r\n\r\n```\r\n$data['message'] = [\r\n    'firstLine' => 'comment of checkout'',\r\n    'secondLine'=> 'comment of checkout'',\r\n    'lastLine'  => 'comment of checkout'\r\n];\r\n```\r\n\r\n#### returnURL\r\n----------------------\r\n##### $url : String\r\n\r\n1. $url: responsible for defining the URL that the buyer will be redirected to finalize a payment through checkout MoIP\r\n\r\n```\r\n$data['returnURL'] = 'https://meusite.com.br/pedidofinalizado';\r\n```\r\n\r\n#### notificationURL\r\n----------------------\r\n##### $url : String\r\n\r\n1. $url: responsible for defining the URL to which the MOIP shall notify to the NASP (Notification of Change in Status of Payment) the change of status.\r\n\r\n```\r\n$data['notificationURL'] = 'https://meusite.com.br/nasp';\r\n```\r\n\r\n#### payment\r\n----------------------\r\n##### $payment : String\r\n\r\n1. $payment: Defines which forms of payment that will be displayed to the payer in Checkout MOIP\r\nbillet: To provide a \"Billet Banking\" as payment option at checkout.\r\nfinancing: To enable the \"Financing\" as payment option at checkout.\r\ndebit: To provide the \"Debit account\" as a payment method at checkout.\r\ncreditCard: To provide a \"Credit Card\" as payment option in checkout.\r\ndebitCard: To provide a \"Debit Card\" as payment option in checkout.\r\n\r\n```\r\n$data['payment'] = [\r\n    'creditCard'=> true,\r\n    'billet'    => false,\r\n    'financing' => false,\r\n    'debit'     => false,\r\n    'debitCard' => false\r\n]\r\n```\r\n\r\n### Data Response\r\n\r\nMethod | Response\r\n-------|----------\r\n$moip->error | false or error message\r\n$moip->response | true or false\r\n$moip->token | token request\r\n$moip->payment_url | payment url\r\n$moip->xmlSend | xml sent\r\n$moip->xmlGet | xml reponse\r\nMoip::response() | object equal to all previous methods\r\n\r\n### License\r\n\r\nThe MoIP pakacge is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT)\r\n","google":"UA-56323206-1","note":"Don't delete this file! It's used internally to help with page regeneration."}